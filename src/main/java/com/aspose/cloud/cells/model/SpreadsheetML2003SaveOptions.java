/*
 * Web API Swagger specification
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.aspose.cloud.cells.model;

import java.util.Objects;
import com.aspose.cloud.cells.model.SaveOptions;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * SpreadsheetML2003SaveOptions
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-09-05T14:42:39.608+08:00")
public class SpreadsheetML2003SaveOptions extends SaveOptions {
  @SerializedName("ExportColumnIndexOfCell")
  private Boolean exportColumnIndexOfCell = null;

  @SerializedName("IsIndentedFormatting")
  private Boolean isIndentedFormatting = null;

  @SerializedName("LimitAsXls")
  private Boolean limitAsXls = null;

  public SpreadsheetML2003SaveOptions exportColumnIndexOfCell(Boolean exportColumnIndexOfCell) {
    this.exportColumnIndexOfCell = exportColumnIndexOfCell;
    return this;
  }

   /**
   * Get exportColumnIndexOfCell
   * @return exportColumnIndexOfCell
  **/
  @ApiModelProperty(value = "")
  public Boolean isExportColumnIndexOfCell() {
    return exportColumnIndexOfCell;
  }

  public void setExportColumnIndexOfCell(Boolean exportColumnIndexOfCell) {
    this.exportColumnIndexOfCell = exportColumnIndexOfCell;
  }

  public SpreadsheetML2003SaveOptions isIndentedFormatting(Boolean isIndentedFormatting) {
    this.isIndentedFormatting = isIndentedFormatting;
    return this;
  }

   /**
   * Get isIndentedFormatting
   * @return isIndentedFormatting
  **/
  @ApiModelProperty(value = "")
  public Boolean isIsIndentedFormatting() {
    return isIndentedFormatting;
  }

  public void setIsIndentedFormatting(Boolean isIndentedFormatting) {
    this.isIndentedFormatting = isIndentedFormatting;
  }

  public SpreadsheetML2003SaveOptions limitAsXls(Boolean limitAsXls) {
    this.limitAsXls = limitAsXls;
    return this;
  }

   /**
   * Get limitAsXls
   * @return limitAsXls
  **/
  @ApiModelProperty(value = "")
  public Boolean isLimitAsXls() {
    return limitAsXls;
  }

  public void setLimitAsXls(Boolean limitAsXls) {
    this.limitAsXls = limitAsXls;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SpreadsheetML2003SaveOptions spreadsheetML2003SaveOptions = (SpreadsheetML2003SaveOptions) o;
    return Objects.equals(this.exportColumnIndexOfCell, spreadsheetML2003SaveOptions.exportColumnIndexOfCell) &&
        Objects.equals(this.isIndentedFormatting, spreadsheetML2003SaveOptions.isIndentedFormatting) &&
        Objects.equals(this.limitAsXls, spreadsheetML2003SaveOptions.limitAsXls) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(exportColumnIndexOfCell, isIndentedFormatting, limitAsXls, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SpreadsheetML2003SaveOptions {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    exportColumnIndexOfCell: ").append(toIndentedString(exportColumnIndexOfCell)).append("\n");
    sb.append("    isIndentedFormatting: ").append(toIndentedString(isIndentedFormatting)).append("\n");
    sb.append("    limitAsXls: ").append(toIndentedString(limitAsXls)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

