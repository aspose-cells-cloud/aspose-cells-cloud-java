/*
 * Web API Swagger specification
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.aspose.cloud.cells.api;
import com.aspose.cloud.cells.client.ApiClient;
import com.aspose.cloud.cells.client.ApiException;
import com.aspose.cloud.cells.client.Configuration;
import com.aspose.cloud.cells.model.CellArea;
import com.aspose.cloud.cells.model.Validation;
import com.aspose.cloud.cells.model.ValidationResponse;
import com.aspose.cloud.cells.model.ValidationsResponse;

import org.junit.Test;
import org.junit.Ignore;

import java.io.File;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CellsWorksheetValidationsApi
 */

public class CellsWorksheetValidationsApiTest {

    private CellsApi api ;

    private String BOOK1 = "Book1.xlsx";
    private String MYDOC = "myDocument.xlsx";
    private String PivTestFile = "TestCase.xlsx";
    private String TEMPFOLDER = "JavaTest";
    private String SHEET1 = "Sheet1";
    private String SHEET2 = "Sheet2";
    private String SHEET3 = "Sheet3";
    private String SHEET4 = "Sheet4";
    private String SHEET5 = "Sheet5";
    private String SHEET6 = "Sheet6";
    private String SHEET7 = "Sheet7";
    private String SHEET8 = "Sheet8";
    private String CellName = "A1";
    private String RANGE = "A1:C10";
    private String CELLAREA = "A1:C10";
    
	
    public CellsWorksheetValidationsApiTest(){
    	try {
			 api = new CellsApi(CellsApiUtil.GetClientId(),CellsApiUtil.GetClientSecret());
		} catch (ApiException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    }    
    /**
     * Delete worksheet validation by index.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void cellsWorksheetValidationsDeleteWorkSheetValidationTest() throws ApiException {
       String name = MYDOC;
        String sheetName = SHEET1;
        Integer validationIndex = 0;
        String folder = TEMPFOLDER;
		CellsApiUtil.Upload(api, folder , name);
        ValidationResponse response = api.cellsWorksheetValidationsDeleteWorksheetValidation(name, sheetName, validationIndex, folder,null);

        // TODO: test validations
    }
    
    /**
     * Get worksheet validation by index.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void cellsWorksheetValidationsGetWorkSheetValidationTest() throws ApiException {
      	String name = MYDOC;
        String sheetName = SHEET1;
        Integer validationIndex = 0;
        String folder = TEMPFOLDER;
		CellsApiUtil.Upload(api, folder , name);
        ValidationResponse response = api.cellsWorksheetValidationsGetWorksheetValidation(name, sheetName, validationIndex, folder,null);

        // TODO: test validations
    }
    
    /**
     * Get worksheet validations.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void cellsWorksheetValidationsGetWorkSheetValidationsTest() throws ApiException {
       String name = MYDOC;
        String sheetName = SHEET1;
        String folder = TEMPFOLDER;
		CellsApiUtil.Upload(api, folder , name);
        ValidationsResponse response = api.cellsWorksheetValidationsGetWorksheetValidations(name, sheetName, folder,null);

        // TODO: test validations
    }
    
    /**
     * Update worksheet validation by index.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void cellsWorksheetValidationsPostWorkSheetValidationTest() throws ApiException {
       String name = BOOK1;
        String sheetName = SHEET1;
        Integer validationIndex = 0;
        Validation validation = new Validation();
        
        CellArea area = new CellArea();
        area.setStartRow(0);
        area.setEndRow(0);
        area.setStartColumn(0);
        area.setEndColumn(0);
        List<CellArea> areaList = new ArrayList<CellArea>();
        areaList.add(area);
        validation.setFormula1("=(OR(A1=\"Yes\",A1=\"No\"))");
        validation.setType("Custom");
        validation.setIgnoreBlank(true);
        String folder = TEMPFOLDER;
		CellsApiUtil.Upload(api, folder , name);
        ValidationResponse response = api.cellsWorksheetValidationsPostWorksheetValidation(name, sheetName, validationIndex, validation, folder,null);
    }
    
    /**
     * Add worksheet validation at index.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void cellsWorksheetValidationsPutWorkSheetValidationTest() throws ApiException {
       String name = MYDOC;
        String sheetName = SHEET1;
        String range = RANGE;
        String folder = TEMPFOLDER;
		CellsApiUtil.Upload(api, folder , name);
        ValidationResponse response = api.cellsWorksheetValidationsPutWorksheetValidation(name, sheetName, range,null,folder,null);

        // TODO: test validations
    }
    
}
