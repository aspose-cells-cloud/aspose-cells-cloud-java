/*
 * Web API Swagger specification
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.aspose.cloud.cells.api;
import com.aspose.cloud.cells.client.ApiClient;
import com.aspose.cloud.cells.client.ApiException;
import com.aspose.cloud.cells.client.Configuration;


import com.aspose.cloud.cells.model.Chart;
import com.aspose.cloud.cells.model.ChartsResponse;

import java.io.File;

import com.aspose.cloud.cells.model.Legend;
import com.aspose.cloud.cells.model.LegendResponse;
import com.aspose.cloud.cells.model.CellsCloudResponse;
import com.aspose.cloud.cells.model.Title;
import com.aspose.cloud.cells.model.TitleResponse;

import org.junit.Test;
import org.junit.Ignore;

import java.io.File;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CellsChartsApi
 */

public class CellsChartsApiTest {

    private  CellsApi api ;

    private String BOOK1 = "Book1.xlsx";
    private String MYDOC = "myDocument.xlsx";
    private String PivTestFile = "TestCase.xlsx";
    private String TEMPFOLDER = "Temp";
    private String SHEET1 = "Sheet1";
    private String SHEET2 = "Sheet2";
    private String SHEET3 = "Sheet3";
    private String SHEET4 = "Sheet4";
    private String SHEET5 = "Sheet5";
    private String SHEET6 = "Sheet6";
    private String SHEET7 = "Sheet7";
    private String SHEET8 = "Sheet8";
    private String CellName = "A1";
    private String RANGE = "A1:C10";
    private String CELLAREA = "A1:C10";
    
    public CellsChartsApiTest(){
    	try {
			 api = new CellsApi(CellsApiUtil.GetClientId(),CellsApiUtil.GetClientSecret());
		} catch (ApiException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    }
    
    /**
     * Hide legend in chart
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void cellsChartsDeleteWorksheetChartLegendTest() throws ApiException {
        String name = MYDOC;
        String sheetName = SHEET3;
        Integer chartIndex = 1;
        String folder = TEMPFOLDER;
        CellsApiUtil.Upload(api, folder , name);
        CellsCloudResponse response = api.cellsChartsDeleteWorksheetChartLegend(name, sheetName, chartIndex, folder,null);

        // TODO: test validations
    }
    
    /**
     * Hide title in chart
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void cellsChartsDeleteWorksheetChartTitleTest() throws ApiException {
        String name = MYDOC;
        String sheetName = SHEET3;
        Integer chartIndex = 0;
        String folder = TEMPFOLDER;
        CellsApiUtil.Upload(api, folder , name);
        CellsCloudResponse response = api.cellsChartsDeleteWorksheetChartTitle(name, sheetName, chartIndex, folder,null);

        // TODO: test validations
    }
    
    /**
     * Clear the charts.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void cellsChartsDeleteWorksheetClearChartsTest() throws ApiException {
        String name = MYDOC;
        String sheetName = SHEET3;
        String folder = TEMPFOLDER;
        CellsApiUtil.Upload(api, folder , name);
        CellsCloudResponse response = api.cellsChartsDeleteWorksheetClearCharts(name, sheetName, folder,null);

        // TODO: test validations
    }
    
    /**
     * Delete worksheet chart by index.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void cellsChartsDeleteWorksheetDeleteChartTest() throws ApiException {
        String name = MYDOC;
        String sheetName = SHEET3;
        Integer chartIndex = 0;
        String folder = TEMPFOLDER;
        CellsApiUtil.Upload(api, folder , name);
        ChartsResponse response = api.cellsChartsDeleteWorksheetDeleteChart(name, sheetName, chartIndex, folder,null);

        // TODO: test validations
    }
    
    /**
     * Get chart info.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void cellsChartsGetWorksheetChartTest() throws ApiException {
        String name = MYDOC;
        String sheetName = SHEET3;
        Integer chartNumber = 0;
		String format = "png";
        String folder = TEMPFOLDER;
        CellsApiUtil.Upload(api, folder , name);
        File response = api.cellsChartsGetWorksheetChart(name, sheetName, chartNumber, format, folder,null);

        // TODO: test validations
    }
    
    /**
     * Get chart legend
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void cellsChartsGetWorksheetChartLegendTest() throws ApiException {
        String name = MYDOC;
        String sheetName = SHEET3;
        Integer chartIndex = 0;
        String folder = TEMPFOLDER;
        CellsApiUtil.Upload(api, folder , name);
        LegendResponse response = api.cellsChartsGetWorksheetChartLegend(name, sheetName, chartIndex, folder,null);

        // TODO: test validations
    }
    
    /**
     * Get chart title
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Ignore
    public void cellsChartsGetWorksheetChartTitleTest() throws ApiException {
        String name = MYDOC;
        String sheetName = SHEET3;
        Integer chartIndex = 0;
        String folder = TEMPFOLDER;
        CellsApiUtil.Upload(api, folder , name);
        TitleResponse response = api.cellsChartsGetWorksheetChartTitle(name, sheetName, chartIndex, folder,null);

        // TODO: test validations
    }
    
    /**
     * Get worksheet charts info.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void cellsChartsGetWorksheetChartsTest() throws ApiException {
        String name = MYDOC;
        String sheetName = SHEET3;
        String folder = TEMPFOLDER;
        CellsApiUtil.Upload(api, folder , name);
        ChartsResponse response = api.cellsChartsGetWorksheetCharts(name, sheetName, folder,null);

        // TODO: test validations
    }
    
    /**
     * Update chart propreties
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void cellsChartsPostWorksheetChartTest() throws ApiException {
        String name = MYDOC;
        String sheetName = SHEET3;
        Integer chartIndex = 0;
        Chart chart = new Chart();
        chart.setAutoScaling(true);
        String folder = TEMPFOLDER;
        CellsApiUtil.Upload(api, folder , name);
        CellsCloudResponse response = api.cellsChartsPostWorksheetChart(name, sheetName, chartIndex, chart, folder,null);

        // TODO: test validations
    }
    
    /**
     * Update chart legend
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void cellsChartsPostWorksheetChartLegendTest() throws ApiException {
        String name = MYDOC;
        String sheetName = SHEET3;
        Integer chartIndex = 0;
        Legend legend = new Legend();
        legend.setWidth(0);
        String folder = TEMPFOLDER;
        CellsApiUtil.Upload(api, folder , name);
        LegendResponse response = api.cellsChartsPostWorksheetChartLegend(name, sheetName, chartIndex, legend, folder,null);

        // TODO: test validations
    }
    
    /**
     * Update chart title
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void cellsChartsPostWorksheetChartTitleTest() throws ApiException {
        String name = MYDOC;
        String sheetName = SHEET3;
        Integer chartIndex = 0;
        Title title = new Title();
        title.setText("test");
        String folder = TEMPFOLDER;
        CellsApiUtil.Upload(api, folder , name);
        TitleResponse response = api.cellsChartsPostWorksheetChartTitle(name, sheetName, chartIndex, title, folder,null);

        // TODO: test validations
    }
    
    /**
     * Add new chart to worksheet.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void cellsChartsPutWorksheetAddChartTest() throws ApiException {
        String name = MYDOC;
        String sheetName = SHEET3;
        String chartType ="Pie";
        Integer upperLeftRow = 5;
        Integer upperLeftColumn = 5;
        Integer lowerRightRow = 10;
        Integer lowerRightColumn = 10;
        String area =  "C7:D11";
        Boolean isVertical = true;
        String categoryData = null;
        Boolean isAutoGetSerialName = null;
        String title = null;
        String folder = TEMPFOLDER;
        CellsApiUtil.Upload(api, folder , name);
        ChartsResponse response = api.cellsChartsPutWorksheetAddChart(name, sheetName, chartType, upperLeftRow, upperLeftColumn, lowerRightRow, lowerRightColumn, area, isVertical, categoryData, isAutoGetSerialName, title, folder,null);

        // TODO: test validations
    }
    
    /**
     * Show legend in chart
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void cellsChartsPutWorksheetChartLegendTest() throws ApiException {
        String name = MYDOC;
        String sheetName = SHEET3;
        Integer chartIndex = 0;
        String folder = TEMPFOLDER;
        CellsApiUtil.Upload(api, folder , name);
        CellsCloudResponse response = api.cellsChartsPutWorksheetChartLegend(name, sheetName, chartIndex, folder,null);

        // TODO: test validations
    }
    
    /**
     * Add chart title / Set chart title visible
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void cellsChartsPutWorksheetChartTitleTest() throws ApiException {
        String name = MYDOC;
        String sheetName = SHEET3;
        Integer chartIndex = 0;
        Title title = new Title();
        title.setText("test");
        String folder = TEMPFOLDER;
        CellsApiUtil.Upload(api, folder , name);
        TitleResponse response = api.cellsChartsPutWorksheetChartTitle(name, sheetName, chartIndex, title, folder,null);

        // TODO: test validations
    }
    
}
